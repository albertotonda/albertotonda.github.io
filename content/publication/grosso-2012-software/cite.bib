@article{grosso2012software,
 abstract = {Software-based self-testing strategies have been mainly proposed to tackle microprocessor testing, but may also be applied to peripheral testing. However, testing system peripherals (e.g., DMA controllers, interrupt controllers, and internal counters) is a challenging task, since their observability and controllability are even more reduced when compared to microprocessors and to peripherals devoted to I/O communication (e.g., serial or parallel ports). In this paper an approach to develop functional tests for system peripherals is proposed. The presented methodology requires two correlated phases: module configuration and module operation. The first one prepares the peripheral to work in the different operation modes, whereas the second one is in charge of exciting the whole device and observing its behavior. We propose a methodology that guides the test engineer in building a compact set of test programs able to reach high structural fault coverage levels in a short time. Experimental results demonstrating the method effectiveness for two real-world case studies are finally reported.},
 author = {M. Grosso and W. J. Perez Holguin and E. Sanchez and M. Sonza Reorda and A. Tonda and J. Velasco Medina},
 doi = {10.1007/s10836-012-5287-2},
 journal = {Journal of Electronic Testing},
 month = {February},
 number = {2},
 pages = {189--200},
 publisher = {Springer Science and Business Media LLC},
 title = {Software-Based Testing for System Peripherals},
 url = {https://doi.org/10.1007/s10836-012-5287-2},
 volume = {28},
 year = {2012}
}
